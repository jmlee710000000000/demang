<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.pro.demang.mapper.MainMapper">

	
	<!-- 게시글 & 회원 조인용 (PostDTO 안에 MemberDTO 있다) -->
	<resultMap id="memberDTO" type="org.pro.demang.model.MemberDTO">
		<result column="m_id" property="m_id"/>
		<result column="m_code" property="m_code"/>
		<result column="m_email" property="m_email"/>
		<result column="m_nickname" property="m_nickname"/>
		<result column="m_profilePic" property="m_profilePic"/>
	</resultMap>
	<resultMap id="postDTO" type="org.pro.demang.model.PostDTO">
		<result column="p_id" property="p_id"/>
		<result column="p_origin" property="p_origin"/>
		<result column="p_type" property="p_type"/>
		<result column="p_writer" property="p_writer"/>
		<result column="p_content" property="p_content"/>
		<collection property="memberDTO" resultMap="memberDTO"/>
		<collection property="postImgDTO" resultMap="postImgDTO"/>
	</resultMap>
	<resultMap id="postImgDTO" type="org.pro.demang.model.PostImgDTO">
		<result column="i_no" property="i_no"/>
		<result column="p_id" property="p_id"/>
		<result column="i_image" property="i_image"/>
	</resultMap>
	
	<resultMap id="commentDTO" type="org.pro.demang.model.CommentDTO">
		<result column="c_id" property="c_id"/>
		<result column="c_writer" property="c_writer"/>
		<result column="c_content" property="c_content"/>
		<result column="c_postNo" property="c_postNo"/>
		<result column="c_regDate" property="c_regDate"/>
		<collection property="memberDTO" resultMap="memberDTO"/>
	</resultMap>

	<resultMap id="tagDTO" type="org.pro.demang.model.TagDTO">
		<result column="t_tag" property="t_tag"/>
		<result column="t_postNo" property="t_postNo"/>
		<collection property="postDTO" resultMap="postDTO"/>
		<collection property="memberDTO" resultMap="memberDTO"/>
		<collection property="postImgDTO" resultMap="postImgDTO"/>
	</resultMap>


	<!-- 친구목록 불러오는 쿼리문 -->
	<select id="fList" resultType="org.pro.demang.model.MemberDTO">
		select m.m_email, m.m_nickname
		from followTBL f join memberTBL m where f.followee = m.m_id and
		f.follower = #{follower}
	</select>
	
	<!-- 유저 검색 기능 쿼리문 -->
	<select id="memberSearch" resultType="org.pro.demang.model.MemberDTO">
		select * 
		from membertbl m 
		where m_email like '%' #{reSearchVal} '%' 
		or m_nickname like '%' #{reSearchVal} '%'
	</select>

	<!-- 게시글 검색 기능 쿼리문 -->
	<select id="postSearch" parameterType="org.pro.demang.model.PostDTO" resultMap="postDTO">
		select m.*, p.*, p2.*
		from postTBL p
		inner join memberTBL m
		on p.p_writer = m.m_id
		left join postimgTBL p2 
		on p2.p_id = p.p_id
		where p.p_content like '%' #{searchVal} '%'
	</select>

	<!-- 해당 태그의 게시물 검색 쿼리문 -->
	<select id="tagSearch" parameterType="org.pro.demang.model.TagDTO" resultMap="tagDTO">
		select t.*, p.*, m.*, p2.*
		from posttbl p
		left join postimgtbl p2 
		on p.p_id = p2.p_id
		inner join membertbl m 
		on p.p_writer = m.m_id
		inner join tagOnPostTBL t
		on t.t_postNo = p.p_id
		where t.t_tag = #{reSearchVal}
	</select>

	<!-- 댓글 목록 불러오는 쿼리문 -->
	<select id="commentShow" resultType="org.pro.demang.model.CommentDTO">
		Select m.m_nickname, m.m_profilePic , m.m_code , c.* from commentTBL c join memberTBL on c.c_writer = m.m_id WHERE c_postNo = #{p_id}
	</select>

	<!-- post 작성 -->
	<insert id="postInsert" useGeneratedKeys="true" keyProperty="p_id">
		INSERT INTO postTBL (p_origin, p_type, p_writer, p_content) VALUES(#{p_origin}, #{p_type}, #{p_writer}, #{p_content})
	</insert>
	
	<!-- 이미지 등록 -->
	<insert id="postInsertImg">
		Insert into postImgTBL (p_id, i_image) values (#{p_id}, #{i_image})
	</insert>
	
	<!-- 새 해시태그 등록 -->
	<insert id="hashtagInsert">
		CALL INSERT_HashtagOnPostTBL(#{hashtag})
	</insert>
	<!-- 게시글에 해시태그 등록 -->
	<insert id="hashtagOnTableInsert">
		INSERT INTO tagOnPostTBL (t_tag, t_postNo) VALUES(#{hashtag}, #{p_id})
	</insert>


	<!-- 이것은 회원가입 쿼리문입니다. -->
	<insert id="memberInsert">
		INSERT INTO memberTBL(m_code, m_email, m_nickname, m_password, m_birth )
		 VALUES(1, #{m_email},#{m_nickname},#{m_password},#{m_birth})
	</insert>

	<!-- 회원 번호로 회원 찾기 -->
	<select id="getMember_no"
		resultType="org.pro.demang.model.MemberDTO">select * from memberTBL WHERE m_id = #{no};
	</select>
	
	<!-- 이메일로 회원 찾기 -->
	<select id="getMember_email"
		resultType="org.pro.demang.model.MemberDTO">select * from memberTBL WHERE m_email = #{m_email};
	</select>
	
	<!-- 팔로잉 수, 팔로워 수 (회원번호로) -->
	<select id="followingCount" resultType="Integer">
	SELECT COUNT(follower) from followTBL WHERE follower = #{no}</select>
	<select id="followerCount" resultType="Integer">
	SELECT COUNT(followee) from followTBL WHERE followee = #{no}</select>
	
	<!-- 팔로우하기 -->
	<insert id="doFollow">INSERT INTO followTBL (follower, followee) VALUES(#{m1}, #{m2})</insert>
	<select id="followCheck" resultType="Integer">
	SELECT COUNT(*)  FROM followTBL WHERE follower=#{m1} AND followee=#{m2}</select>

	<!-- 해당 번호의 회원의 게시글들(게시글번호만)(최신순) -->
	<select id="getPostList_writer" resultType="Integer">
	SELECT * FROM postTBL WHERE p_writer=#{no} ORDER BY p_id DESC</select>
		
	<!-- 해당 번호의 회원이 팔로우한 회원들이 쓴 게시글들(게시글번호만)(최신순) -->
	<select id="getPostList_followee" resultType="Integer">
		SELECT p.p_id
		FROM followTBL f
		JOIN postTBL p
		ON f.followee = p.p_writer
		WHERE f.follower = #{no}
		ORDER BY p.p_id DESC;
	</select>


	<!-- 게시글 번호로 게시글 찾기 -->
	<select id="getPost" resultType="org.pro.demang.model.PostDTO" resultMap="postDTO">
	SELECT m.*, p.* from postTBL p JOIN memberTBL m ON p.p_writer = m.m_id WHERE p_id = #{no}</select>
	<!-- 게시글 번호로 댓글들 찾기 최신순 -->
	<select id="getCommentList" resultType="org.pro.demang.model.CommentDTO" resultMap="commentDTO">
	SELECT m.*, c.*
	   from commentTBL c
	   join memberTBL m 
	   on c.c_writer = m.m_id
	   WHERE c_postNo = #{no}
	   ORDER BY c.c_id DESC
	</select>
	<!-- 게시글 번호로 댓글들 찾기. 최신 세 개만 -->
	<select id="getCommentList_recent" resultType="org.pro.demang.model.CommentDTO" resultMap="commentDTO">
	SELECT m.*, c.*
	   from commentTBL c
	   join memberTBL m 
	   on c.c_writer = m.m_id
	   WHERE c_postNo = #{no}
	   ORDER BY c.c_id DESC
		LIMIT 3
	</select>
	<!-- 게시글 번호로 해당 게시글의 이미지들 찾기 -->
	<select id="getImageList" resultType="org.pro.demang.model.PostImgDTO">
	SELECT * FROM postImgTBL WHERE p_id = #{p_id}
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="commentInsert" useGeneratedKeys="true" keyProperty="c_id">
		INSERT INTO commentTBL (c_writer, c_content, c_postNo) VALUES (#{c_writer}, #{c_content}, #{c_postNo})
	</insert>
	
	<!-- 회원정보수정 -->
	<update id="memberUpdate">
		UPDATE memberTBL
		SET m_nickname=#{m_nickname}, m_password=#{m_password}, m_birth=#{m_birth},
		m_profilePic=#{m_profilePic},
		m_introduce=#{m_introduce}, m_gender=#{m_gender}
		WHERE m_id=#{m_id};
	</update>
		   
		   <select id="emailCheck" resultType="String">
   select m_email from memberTBL where m_email = #{m_email}
</select>
		   
</mapper>